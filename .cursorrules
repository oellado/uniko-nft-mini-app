# Cursor Rules

## ðŸš€ V7 PURE GENERATIVE BREAKTHROUGH (December 2024)

### MAJOR ACHIEVEMENT: Contract Size Optimization
**UnikoOnchain7** achieves 39% size reduction through ultra rare removal:
- **V7 Size**: 14.7KB compiled (9.5KB under 24KB limit)
- **V6 Size**: 24.7KB compiled (85 bytes over limit)
- **Space Saved**: 9,606 bytes (39% reduction)
- **Status**: ðŸš€ **MAINNET READY** with massive feature budget

### Pure Generative Philosophy Achieved
- **NO ULTRA RARES**: Removed all 10 predetermined designs
- **100% Algorithmic**: True generative art integrity
- **Same Functionality**: All V4/V6 traits preserved
- **Cross-Platform**: Universal iOS compatibility maintained

## Metadata Validation Requirements

### CRITICAL: Automated Validation Required
As an agent, I MUST:
1. Proactively check if metadata validation is needed for any deployment
2. Automatically suggest and implement validation when:
   - New collection deployment is discussed
   - Metadata changes are proposed
   - Contract updates are planned
3. Execute the three-layer validation system:
   ```javascript
   // Pre-deployment validation
   await runPreDeploymentValidation('./metadata');
   
   // Contract-level validation
   await ensureContractValidation();
   
   // Post-deployment verification
   await verifyDeployment(contractAddress, totalSupply);
   ```

### Validation Automation Steps
1. Pre-deployment:
   ```yaml
   # GitHub Action for pre-deployment
   name: NFT Metadata Validation
   on: [push, pull_request]
   jobs:
     validate:
       runs-on: ubuntu-latest
       steps:
         - uses: actions/checkout@v2
         - run: node scripts/validate-metadata.js ./metadata
   ```

2. Continuous Monitoring:
   ```javascript
   // Automated monitoring setup
   const monitor = {
     schedule: 'daily',
     tasks: [
       'verify-deployment',
       'metadata-integrity-check',
       'trait-distribution-analysis'
     ]
   };
   ```

3. Event Triggers:
   ```javascript
   // Event-based validation
   contract.on('Transfer', validateToken);
   contract.on('Mint', validateNewToken);
   ```

### Agent Responsibilities
- MUST remind about validation before deployment
- MUST offer to set up automation
- MUST verify validation results
- MUST alert on validation failures
- MUST maintain validation history

### Validation Checklist
Before any deployment:
- [ ] Pre-deployment validation complete
- [ ] Contract validation implemented
- [ ] Post-deployment verification ready
- [ ] Automation scripts prepared
- [ ] Monitoring system configured

## Previous rules and patterns... 